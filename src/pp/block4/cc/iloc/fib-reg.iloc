// Register-to-register
start:  loadAI r_arp, @n    => r_n
        loadI 1             => r_x
        loadI 1             => r_y
        loadI 1             => r_z
        loadI 1             => r_min

while:  cmp_GT r_n, r_min   => r_cmp
        cbr r_cmp           -> body, end

body:   add r_x, r_y        => r_z
        i2i r_y             => r_x
        i2i r_z             => r_y
        subI r_n, 1         => r_n
        jumpI               -> while

end:    out "result: ",     r_z